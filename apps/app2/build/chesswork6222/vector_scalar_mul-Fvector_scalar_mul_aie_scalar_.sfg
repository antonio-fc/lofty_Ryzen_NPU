
// File generated by noodle version U-2023.06#da42d6af5a#240507, Tue Dec 10 09:58:45 2024
// Copyright 2014-2023 Synopsys, Inc. All rights reserved.
// noodle -I/opt/vitis_aie_essentials/data/aie_ml/lib -I/opt/vitis_aie_essentials/data/aie_ml/lib/isg -I/opt/vitis_aie_essentials/include -I/opt/vitis_aie_essentials/include -I/opt/vitis_aie_essentials/data/aie_ml/lib/runtime_cxx/libcxx-lite/include -I/opt/vitis_aie_essentials/data/aie_ml/lib/runtime_cxx/libs/libcxx-9.0.0/include-lite -I/opt/vitis_aie_essentials/data/aie_ml/lib/runtime/include -I/opt/vitis_aie_essentials/tps/boost_1_64_0 -D__AIENGINE__ -D__AIE_ARCH__=20 -D__AIEARCH__=20 -D__tct_tgt__=240507 -iaie_core.h +Sinl +Olbb=200 +Opmsa +NOpld +wchesswork6222 chesswork6222/vector_scalar_mul.sfg +Q1=+Sinl,+Olbb=200,+Opmsa,+NOpld +Q2=+Sinl,+Olbb=200,+Opmsa,+NOpld +Q3=+Sinl,+Olbb=1000,+Opmsa,+NOpld +Qfast=+Sinl,+Olbb=1000,+Opmsa,+NOpld,+Opfp +Qs=+Sinl,+Olbb=200,+Opmsa,+NOpld +Qz=+Sinl,+Olbb=200,+Opmsa,+NOpld me


/***
!!  void vector_scalar_mul_aie_scalar(void *, void *, void *, unsigned)
Fvector_scalar_mul_aie_scalar : user_defined, called {
    fnm : "vector_scalar_mul_aie_scalar" 'void vector_scalar_mul_aie_scalar(void *, void *, void *, unsigned)';
    arg : ( addr:i addr:i addr:i addr:i w32:i );
    loc : ( LR[0] P[0] P[1] P[2] R[0] );
    flc : ( P[6] P[7] R[16] R[17] R[18] R[19] R[20] R[21] R[22] R[23] );
    vac : ( crMCDEn[0] crSCDEn[0] );
    frm : ( );
}
****
***/

[
    0 : vector_scalar_mul_aie_scalar typ=iword bnd=e stl=PM
    2 : __arg0 typ=addr bnd=p
    3 : __arg1 typ=addr bnd=p
    4 : __arg2 typ=addr bnd=p
    5 : __arg3 typ=w32 bnd=p
    6 : _cst typ=u2 val=0f bnd=m
   10 : __tmp typ=bool bnd=m
   11 : __tmp typ=w32 bnd=m
   16 : _cst typ=u2 val=1f bnd=m
   17 : __ali0 typ=w8 bnd=b stl=DMb
   19 : __vola typ=iword bnd=b stl=PM
   21 : __la typ=addr bnd=p
   26 : __M_DMs typ=w32 bnd=d stl=DMs
   92 : __R_LC typ=w32 bnd=d stl=LC
   93 : __R_LE typ=addr bnd=d stl=LE
   94 : __R_LS typ=addr bnd=d stl=LS
  112 : __ct_1 typ=u1 val=1f bnd=m
  117 : __R_SP typ=addr bnd=d stl=SP
  118 : __sp typ=addr bnd=b stl=SP
  119 : __rd___sp typ=addr bnd=m
  120 : __wr___sp typ=addr bnd=m
  121 : __rd___sp typ=addr bnd=m
  123 : __wr___sp typ=addr bnd=m
  136 : __ct_0 typ=u4 val=0f bnd=m
  141 : __iv1___tmp typ=addr bnd=m
  142 : __iv2___tmp typ=addr bnd=m
  147 : __shv___iv1___tmp typ=addr bnd=m
  148 : __shv___iv2___tmp typ=addr bnd=m
  165 : __ct_0s0 typ=amod val=0s0 bnd=m
  166 : __ct_0S0 typ=amod val=0S0 bnd=m
  167 : __ct_4 typ=amod val=4f bnd=m
  174 : __either typ=bool bnd=m
  175 : __trgt typ=addr val=0J bnd=m
  176 : __trgt typ=addr val=0J bnd=m
  177 : __trgt typ=addr val=0J bnd=m
  178 : __trgt typ=addr val=0J bnd=m
  179 : __vcnt typ=w32 bnd=m
]
Fvector_scalar_mul_aie_scalar {
    #55 off=0
    (_cst.6 var=6) const ()  <6>;
    (__ali0.40 var=17) source ()  <43>;
    (__vola.42 var=19) source ()  <47>;
    (__la.44 var=21 stl=LR off=0) inp ()  <51>;
    (__la.45 var=21) deassign (__la.44)  <52>;
    (__arg0.46 var=2 stl=P off=0) inp ()  <54>;
    (__arg0.47 var=2) deassign (__arg0.46)  <55>;
    (__arg1.48 var=3 stl=P off=1) inp ()  <56>;
    (__arg1.49 var=3) deassign (__arg1.48)  <57>;
    (__arg2.50 var=4 stl=P off=2) inp ()  <58>;
    (__arg2.51 var=4) deassign (__arg2.50)  <59>;
    (__arg3.52 var=5 stl=R off=0) inp ()  <60>;
    (__arg3.53 var=5) deassign (__arg3.52)  <61>;
    (__vola.256 var=19) void_event_uint2_t (_cst.6 __vola.42)  <62>;
    (__M_DMs.168 var=26) st_def ()  <150>;
    (__ct_1.254 var=112) const ()  <304>;
    (__R_SP.266 var=117) st_def ()  <318>;
    (__sp.267 var=118) source ()  <319>;
    (__rd___sp.268 var=119) rd_res_reg (__R_SP.266 __sp.267)  <320>;
    (__R_SP.270 var=117 __sp.271 var=118) wr_res_reg (__wr___sp.324 __sp.267)  <322>;
    (__rd___sp.272 var=121) rd_res_reg (__R_SP.266 __sp.271)  <323>;
    (__ct_0.289 var=136) const ()  <375>;
    (__tmp.319 var=10) bool__ge___sint___sint (__ct_0.289 __arg3.53)  <417>;
    (__wr___sp.324 var=120) __Pvoid_add___Pvoid_amod (__rd___sp.268 __ct_0s0.343)  <425>;
    (__ct_0s0.343 var=165) const ()  <464>;
    (__tmp.350 var=10) bool_nez_w32 (__tmp.319)  <492>;
    (__trgt.351 var=175) const ()  <493>;
    () void_ba_bool_addr (__tmp.350 __trgt.351)  <494>;
    (__either.352 var=174) undefined ()  <495>;
    if {
        {
            () if_expr (__either.352)  <13>;
            () chess_frequent_else ()  <14>;
            () chess_rear_then ()  <496>;
        } #4
        {
            (__trgt.353 var=176) const ()  <497>;
            () void_ja_addr (__trgt.353)  <498>;
        } #5 off=4
        {
            #7 off=1
            (__ct_4.345 var=167) const ()  <468>;
            (__R_LC.354 var=92) wr_res_reg (__arg3.53)  <499>;
            (__trgt.355 var=177) const ()  <500>;
            (__R_LS.356 var=94) wr_res_reg (__trgt.355)  <501>;
            (__trgt.357 var=178) const ()  <502>;
            (__R_LE.358 var=93) wr_res_reg (__trgt.357)  <503>;
            (__vcnt.359 var=179) undefined ()  <505>;
            for {
                {
                    (__ali0.88 var=17) entry (__ali0.64 __ali0.40)  <89>;
                    (__iv1___tmp.297 var=141) entry (__iv1___tmp.298 __arg0.47)  <384>;
                    (__iv2___tmp.302 var=142) entry (__iv2___tmp.303 __arg1.49)  <388>;
                } #9
                {
                    (__tmp.26 var=11) __uint__ml___uint___uint (__tmp.258 __tmp.257)  <26>;
                    (__tmp.257 var=11) load (__M_DMs.168 __arg2.51 __ali0.88)  <307>;
                    (__tmp.258 var=11) load (__M_DMs.168 __iv1___tmp.297 __ali0.88)  <308>;
                    (__M_DMs.259 var=26 __ali0.260 var=17) store (__tmp.26 __iv2___tmp.302 __ali0.88)  <309>;
                    (__shv___iv1___tmp.334 var=147) __Pvoid_add___Pvoid_amod (__iv1___tmp.297 __ct_4.345)  <441>;
                    (__shv___iv2___tmp.339 var=148) __Pvoid_add___Pvoid_amod (__iv2___tmp.302 __ct_4.345)  <449>;
                } #256 off=2
                {
                    () for_count (__vcnt.359)  <35>;
                    (__ali0.64 var=17 __ali0.65 var=17) exit (__ali0.260)  <73>;
                    (__iv1___tmp.298 var=141 __iv1___tmp.299 var=141) exit (__shv___iv1___tmp.334)  <385>;
                    (__iv2___tmp.303 var=142 __iv2___tmp.304 var=142) exit (__shv___iv2___tmp.339)  <389>;
                    () zloop_sink_absolute (__R_LC.354 __R_LS.356 __R_LE.358)  <504>;
                } #18
            } #8 rng=[1,2147483647]
        } #6
        {
            (__ali0.60 var=17) merge (__ali0.40 __ali0.65)  <69>;
        } #19
    } #3
    #31 off=5 nxt=-2
    (_cst.37 var=16) const ()  <37>;
    () sink (__ali0.60)  <44>;
    () sink (__vola.261)  <48>;
    () void_ret_addr (__la.45)  <53>;
    (__vola.261 var=19) void_event_uint2_t (_cst.37 __vola.256)  <63>;
    () sink (__ct_1.254)  <306>;
    (__R_SP.275 var=117 __sp.276 var=118) wr_res_reg (__wr___sp.329 __sp.271)  <327>;
    () sink (__sp.276)  <328>;
    (__wr___sp.329 var=123) __Pvoid_add___Pvoid_amod (__rd___sp.272 __ct_0S0.344)  <433>;
    (__ct_0S0.344 var=166) const ()  <466>;
} #1
0 : 'vector_scalar_mul_aie_scalar';
----------
0 : (0,0:0,0);
----------

