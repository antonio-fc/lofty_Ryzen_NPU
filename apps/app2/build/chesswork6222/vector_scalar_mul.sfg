
// Function: void vector_scalar_mul_aie_scalar((NOTE: unhandled type) , (NOTE: unhandled type) , (NOTE: unhandled type) , i32 )
[
  0 : vector_scalar_mul_aie_scalar bnd=e
  1 : _cst val=1f typ=__i1
  2 : __arg0 typ=__Pvoid
  3 : __arg1 typ=__Pvoid
  4 : __arg2 typ=__Pvoid
  5 : __arg3 typ=__i32
  6 : _cst val=0f typ=uint2_t
  7 : __regcall3__chessintr_void_event_uint2_t bnd=e
  8 : _cst val=0f
  9 : _cst val=1f typ=__i32
  10 : __tmp typ=__i1
  11 : __tmp typ=__i32
  12 : _cst val=-1f typ=__i32
  13 : _cst val=0f typ=__i32
  14 : _cst val=2f typ=__i64
  15 : __tmp typ=__Pvoid
  16 : _cst val=1f typ=uint2_t
]
Lvector_scalar_mul_aie_scalar
{
  { // BB#0
    ( vreg.1 var=1 ) const ( ) <1>;
    ( vreg.2 var=2 ) inp ( ) <2>;
    ( vreg.3 var=3 ) inp ( ) <3>;
    ( vreg.4 var=4 ) inp ( ) <4>;
    ( vreg.5 var=5 ) inp ( ) <5>;
    ( vreg.6 var=6 ) const ( ) <6>;
    ( vreg.7 var=7 ) const ( ) <7>;
    ( vreg.8 var=8 ) const ( ) <8>;
    ( ) lcall_tail /* __regcall3__chessintr_void_event_uint2_t */ ( vreg.8 vreg.7 vreg.6 ) <9>;
    ( vreg.10 var=9 ) const ( ) <10>;
    ( vreg.11 var=10 ) setlt___i32 ( vreg.5 vreg.10 ) <11>;
    ( vreg.12 var=11 ) zext___i1___i32 ( vreg.11 ) <12>;
  } #2
  if {
    { // no associated BB
      ( ) if_expr ( vreg.11 ) <13>; // weights: 1073205,2146410443 : 0%
      ( ) chess_frequent_else ( ) <14>;
    } #4
    {
      // NOTE: GOTO FROM BB#0 TO BB#2 [HIDDEN]
    } #5
    {
      // NOTE: GOTO FROM BB#0 TO BB#1 [HIDDEN]
      { // BB#1
        ( vreg.15 var=12 ) const ( ) <15>;
        ( vreg.16 var=11 ) add___i32 ( vreg.5 vreg.15 ) <16>;
        ( vreg.17 var=13 ) const ( ) <17>;
      } #7
      // NOTE: GOTO FROM BB#1 TO BB#3 [HIDDEN]
      do {
        { // no associated BB
          ( vreg.34 var=11 ) entry ( vreg.30 vreg.17 ) <34>;
        } #9
        {
          sync {
            ( vreg.18 var=11 ) sync_link ( vreg.34 ) sid=1 <18>;
          } #11
          { // BB#3
            ( ) chain_tie_loop ( ) <19>;
            ( vreg.20 var=11 ) load___i32 ( vreg.4 ) <20>;
            ( vreg.21 var=14 ) const ( ) <21>;
            ( vreg.22 var=11 ) trunc___i64___i32 ( vreg.21 ) <22>;
            ( vreg.23 var=11 ) shl___i32 ( vreg.18 vreg.22 ) <23>;
            ( vreg.24 var=15 ) add___Pvoid ( vreg.2 vreg.23 ) <24>;
            ( vreg.25 var=11 ) load___i32 ( vreg.24 ) <25>;
            ( vreg.26 var=11 ) mul___i32 ( vreg.25 vreg.20 ) <26>;
            ( vreg.27 var=15 ) add___Pvoid ( vreg.3 vreg.23 ) <27>;
            ( ) store___i32 ( vreg.26 vreg.27 ) <28>;
            ( vreg.29 var=9 ) const ( ) <29>;
            ( vreg.30 var=11 ) add___i32 ( vreg.18 vreg.29 ) <30>;
            ( vreg.31 var=10 ) setlt___i32 ( vreg.30 vreg.5 ) <31>;
            ( vreg.32 var=11 ) zext___i1___i32 ( vreg.31 ) <32>;
          } #12
          if {
            { // no associated BB
              ( ) if_expr ( vreg.31 ) <33>;
            } #14
            {
              // NOTE: GOTO FROM BB#3 TO BB#3 [HIDDEN]
            } #15
            {
              // NOTE: GOTO FROM BB#3 TO BB#2 [HIDDEN]
            } #16
            { // no associated BB
            } #17
          } #13 // if
        } #10
        { // no associated BB
          ( ) while_expr ( vreg.31 ) <35>;
          ( ) backedge_taken_count ( vreg.16 ) <36>;
        } #18
      } #8// do_while
      // NOTE: GOTO FROM BB#3 TO BB#2 [HIDDEN]
    } #6
    { // no associated BB
    } #19
  } #3 // if
  sync {
  } #20
  { // BB#2
    ( vreg.37 var=16 ) const ( ) <37>;
    ( vreg.38 var=7 ) const ( ) <38>;
    ( vreg.39 var=8 ) const ( ) <39>;
    ( ) lcall_tail /* __regcall3__chessintr_void_event_uint2_t */ ( vreg.39 vreg.38 vreg.37 ) <40>;
    ( ) return ( ) <41>;
  } #21 nxt=-2
} #1
0 : 'vector_scalar_mul_aie_scalar';
----------
0 : (0,0:0,0);
----------
==========alias_info
20 : 0;
25 : 0;
28 : 0;

[
]
llvmgvt
{ // no associated BB
} #0
0 : './dummy_file';
----------
0 : (0,0:0,0);
----------
==========debug_type_info
==========data_init
	.section	".linker-options","e",@llvm_linker_options
